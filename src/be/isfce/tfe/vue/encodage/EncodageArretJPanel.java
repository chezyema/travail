/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package be.isfce.tfe.vue.encodage;

import be.isfce.tfe.db.CircuitDao;
import be.isfce.tfe.metier.Arret;
import be.isfce.tfe.metier.Circuit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author yema
 */
public class EncodageArretJPanel extends javax.swing.JPanel {

    List<Circuit> tousLesCircuits;

    /**
     * Creates new form AjoutArretJPanell
     */
    public EncodageArretJPanel() {
        initComponents();
        tousLesCircuits = CircuitDao.getTousLesCircuits();
        initCircuitsList();
    }

    public Arret getArretFromFields() {
        Arret arret = new Arret();
        arret.setId(0);
        arret.setAdresse(adressearretTextField.getText());
        arret.setCodepostale(Integer.valueOf(codepostalTextField.getText()));

        arret.setVille(villeTextField.getText());

        arret.setLesCircuits(getCircuitSelectionnes());
        return arret;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adressearret = new javax.swing.JLabel();
        adressearretTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        codepostalTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        villeTextField = new javax.swing.JTextField();

        adressearret.setText("Adresse Arret :");

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Circuits"));
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Code postal:");

        jLabel2.setText("Ville:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adressearret, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adressearretTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                            .addComponent(villeTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(codepostalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adressearret, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adressearretTextField))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(codepostalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(villeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adressearret;
    private javax.swing.JTextField adressearretTextField;
    private javax.swing.JTextField codepostalTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField villeTextField;
    // End of variables declaration//GEN-END:variables

    private void initCircuitsList() {
        DefaultListModel listModel = new DefaultListModel();
        for (Circuit circuit : tousLesCircuits) {
            listModel.addElement(circuit.getNomCircuit());
        }
        jList1.setModel(listModel);
    }

    private List<Circuit> getCircuitSelectionnes() {
        List<Circuit> circuits = new ArrayList<Circuit>();
        int[] selectedIndices = jList1.getSelectedIndices();
        for (int index : selectedIndices) {
            circuits.add(tousLesCircuits.get(index));
        }
        return circuits;
    }
}
